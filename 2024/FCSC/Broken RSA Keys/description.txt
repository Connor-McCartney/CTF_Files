We ask you if it is possible to protect against a fault attack against an RSA-CRT by correcting possible errors. To test your method for correcting errors, you are provided with a sample of erroneous keys to correct generated by faulty hardware. You are asked to make these corrections without knowing the associated public keys. However, we specify that the public exponent is always less than 100 bits, that pand qhave similar sizes and that we use the usual notations: p, q, dp, dq, iq.

Among the files provided, output.txtcontains 15 wrong RSA keys that you need to fix. To verify that a key is correctly corrected, we also provide the Python script broken-rsa-keys.pythat compares the sha256 of the key after correction to a value present in output.txt. When all checks have passed, the flag will be derived and then displayed.
